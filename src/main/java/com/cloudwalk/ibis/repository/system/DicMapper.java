/**
 * Copyright @ 2015-2018 重庆中科云丛科技有限公司  All Rights Reserved.
 *
 * This file is automatically generated by MyBatis Generator, do not modify.
 * MyBatis Generator was modified by FUNDSTAR team, if you have any questions please contact with author.
 * Project Name: FundStar
 * File Name: DicValuesMapper.java
 * Creat Date: 2015-08-15 13:47:27
 */
package com.cloudwalk.ibis.repository.system;

import java.util.List;
import java.util.Map;

import org.springframework.cache.annotation.CachePut;
import org.springframework.dao.DataAccessException;

import com.cloudwalk.ibis.model.system.DicTypes;
import com.cloudwalk.ibis.model.system.DicValues;
import com.google.code.ssm.api.InvalidateSingleCache;
import com.google.code.ssm.api.ParameterValueKeyProvider;
import com.google.code.ssm.api.ReadThroughMultiCache;
import com.google.code.ssm.api.ReadThroughSingleCache;
import com.google.code.ssm.api.UpdateSingleCache;

/**
 * Class Name: DicValuesMapper <br>
 * Description: This interface corresponds to the table - FND_DIC_VALUES <br>
 * Create Date: 2015-08-15 13:47:27 <br>
 */
public interface DicMapper {
    
    @InvalidateSingleCache(namespace = "DicValues")
    int deleteByPrimaryKey(@ParameterValueKeyProvider DicValues key) throws DataAccessException;

    @CachePut(value = "DicValues")
    int insertSelective(DicValues record) throws DataAccessException;

    @ReadThroughSingleCache(namespace ="DicValues", expiration = 30)
    DicValues selectByPrimaryKey(DicValues key) throws DataAccessException;

    @UpdateSingleCache(namespace = "DicValues", expiration = 30)
    int updateByPrimaryKeySelective(DicValues record) throws DataAccessException;


    @ReadThroughMultiCache(namespace ="DicValues", expiration = 30)
    List<DicValues> selectAll(DicValues record) throws DataAccessException;

    @ReadThroughMultiCache(namespace ="DicValues", expiration = 30)
    List<DicValues> selectAllByPage(Map<String, Object> map) throws DataAccessException;
    /**
     * 
     * @param 张宇超
     * @return
     * @throws DataAccessException
     */
    @ReadThroughMultiCache(namespace ="DicValues", expiration = 30)
    List<DicValues> selectAllByPageAndType(Map<String, Object> map) throws DataAccessException;
  
    @ReadThroughMultiCache(namespace ="DicValues", expiration = 30)
    List<DicValues> searchAll(DicValues record) throws DataAccessException;

  
    @ReadThroughMultiCache(namespace ="DicValues", expiration = 30)
    List<DicValues> searchAllByPage(Map<String, Object> map) throws DataAccessException;

    @ReadThroughMultiCache(namespace ="DicValues", expiration = 30)
    List<DicTypes> selectAllDicTypes(Map<String, Object> map) throws DataAccessException;
    
    int selectCount(DicValues record) throws DataAccessException;
    
    DicTypes selectDicTypesByKey(String dicType);
    //批量插入
    int insertBatch(List<DicValues> list);

}